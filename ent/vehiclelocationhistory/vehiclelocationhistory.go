// Code generated by ent, DO NOT EDIT.

package vehiclelocationhistory

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the vehiclelocationhistory type in the database.
	Label = "vehicle_location_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCity holds the string denoting the city field in the database.
	FieldCity = "city"
	// FieldRideID holds the string denoting the ride_id field in the database.
	FieldRideID = "ride_id"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// FieldLat holds the string denoting the lat field in the database.
	FieldLat = "lat"
	// FieldLong holds the string denoting the long field in the database.
	FieldLong = "long"
	// EdgeRides holds the string denoting the rides edge name in mutations.
	EdgeRides = "rides"
	// Table holds the table name of the vehiclelocationhistory in the database.
	Table = "vehicle_location_histories"
	// RidesTable is the table that holds the rides relation/edge.
	RidesTable = "vehicle_location_histories"
	// RidesInverseTable is the table name for the Ride entity.
	// It exists in this package in order to avoid circular dependency with the "ride" package.
	RidesInverseTable = "rides"
	// RidesColumn is the table column denoting the rides relation/edge.
	RidesColumn = "ride_id"
)

// Columns holds all SQL columns for vehiclelocationhistory fields.
var Columns = []string{
	FieldID,
	FieldCity,
	FieldRideID,
	FieldTimestamp,
	FieldLat,
	FieldLong,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
